package com.utstatus.gui;

import static com.google.common.base.Strings.isNullOrEmpty;
import com.google.common.primitives.Ints;
import com.utstatus.model.Configuration;
import com.utstatus.model.Player;
import com.utstatus.sound.SoundPlayer;
import com.utstatus.sound.SoundPlayerService;
import java.awt.TrayIcon;
import java.io.File;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import org.quartz.Job;
import org.quartz.JobExecutionContext;
import org.quartz.JobExecutionException;
import org.quartz.Scheduler;
import org.quartz.SchedulerException;
import org.quartz.SimpleTrigger;
import org.quartz.impl.JobDetailImpl;
import org.quartz.impl.StdSchedulerFactory;
import org.quartz.impl.triggers.SimpleTriggerImpl;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 *
 * @author dcnorris
 */
public class Setup extends javax.swing.JFrame {

    private static final Logger logger = LoggerFactory.getLogger(Setup.class);

    private JFileChooser exeChooser;
    private Configuration config;
    private UrtApp app;

    public Setup(Configuration config, UrtApp app) {
        this.config = config;
        this.app = app;
        initFileChooser();
        initComponents();
    }

    private void initFileChooser() {
        exeChooser = new JFileChooser();
        exeChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        exeChooser.setDialogTitle("Open Index Folder ...");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ipAddressTextField = new javax.swing.JTextField();
        portTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        playerNameTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        exeTextField = new javax.swing.JTextField();
        exeBrowseBtn = new javax.swing.JButton();
        errorNotification = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);

        portTextField.setText(config.getPortString());

        jLabel1.setText("Server IP Address:");

        jLabel2.setText("Server Port:");

        jLabel3.setIcon(new javax.swing.ImageIcon(this.getClass().getResource("/urbanterror.jpg")));

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("PlayerName:");

        jLabel5.setText("Path to Executable:");

        exeBrowseBtn.setText("Browse...");
        exeBrowseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exeBrowseBtnActionPerformed(evt);
            }
        });

        errorNotification.setForeground(new java.awt.Color(255, 0, 0));
        errorNotification.setText("warning");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ipAddressTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                            .addComponent(portTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                            .addComponent(playerNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                            .addComponent(exeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)))
                    .addComponent(exeBrowseBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(startButton, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(errorNotification)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(portTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(playerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(exeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(exeBrowseBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(errorNotification)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );

        ipAddressTextField.setText(config.getIp());
        playerNameTextField.setText(config.getPlayerName());
        exeTextField.setText(config.getExecutablePath());
        errorNotification.setText("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        if (isValidInput()) {
            config.setIp(ipAddressTextField.getText());
            config.setPort(Integer.parseInt(portTextField.getText()));
            config.setPlayerName(playerNameTextField.getText());
            config.setExecutablePath(exeTextField.getText());
            setVisible(false);
        }
        app.initScheduler();
        app.setVisible(true);
    }//GEN-LAST:event_startButtonActionPerformed

    private void exeBrowseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exeBrowseBtnActionPerformed
        exeChooser.showDialog(this, "Open");
        File f = exeChooser.getSelectedFile();
        if (f == null) {
            exeTextField.setText("");
            return;
        }
        exeTextField.setText(f.getAbsolutePath());
    }//GEN-LAST:event_exeBrowseBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorNotification;
    private javax.swing.JButton exeBrowseBtn;
    private javax.swing.JTextField exeTextField;
    private javax.swing.JTextField ipAddressTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField playerNameTextField;
    private javax.swing.JTextField portTextField;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables

    private boolean isValidInput() {
        if (isNullOrEmpty(ipAddressTextField.getText())
                && isNullOrEmpty(portTextField.getText())
                && isNullOrEmpty(playerNameTextField.getText())
                && isNullOrEmpty(exeTextField.getText())) {
            try {
                Ints.tryParse(portTextField.getText());
            } catch (Exception ex) {
                errorNotification.setText("Enter a valid Port");
                return false;
            }
            errorNotification.setText("Please Enter all Fields.");
            return false;
        }
        return true;
    }

}
